@using Suplex.UI.Modules.Admin.ViewModels
@using Kendo.Mvc.UI
@using Microsoft.AspNetCore.Html
@using Microsoft.Extensions.FileProviders
@using Kendo.Mvc.TagHelpers
@{
    ViewBag.Title = "Admin";
}

<kendo-toolbar id="tbMain">
    <toolbar-items>
        <item type="CommandType.Button" id="btnNewFile" icon="file-add" title="New Suplex File Store" click="SUPLEXUI.btnNewFileClick" />
        <item type="CommandType.Button" id="btnOpenFile" icon="folder-open" title="Open Suplex File Store" click="SUPLEXUI.btnOpenFileClick" />
        <item type="CommandType.SplitButton" id="btnSaveFile" icon="save" title="Save Suplex File Store" click="SUPLEXUI.btnSaveFileClick">
            <menu-buttons>
                <toolbar-button id="btnSaveFileAs" text="Save As" />
                <toolbar-button text="Save Signed File" />
            </menu-buttons>
        </item>
        <item type="CommandType.Separator" />
        <item type="CommandType.ButtonGroup">
            <buttons>
                <toolbar-button id="btnShowSecureObjects" text="Secure Objects" togglable="true" group="selectView" toggle="SUPLEXUI.switchView" />
                <toolbar-button id="btnShowSecurityPrincipals" text="Users/Groups" togglable="true" group="selectView" toggle="SUPLEXUI.switchView" />
            </buttons>
        </item>
        <item template="<label data-bind='text: fileName'></label>" />
    </toolbar-items>
</kendo-toolbar>

<div id="spView" data-bind="visible: visible">    
    <div id="spTb" class="k-block" style="padding: 4px 0;">
        <input class="k-textbox" id="spTxtGrdFilter" placeholder="Filter" />
        @(Html.Kendo().Button().Name("spBtnNewUser").HtmlAttributes(new { type = "button" }).SpriteCssClass("icon-user").Content("New User").Events(e => e.Click("SUPLEXUI.spBtnNewUserClick")))
        <!-- Comment tag placed here to remove the extra space between the 2 buttons
        -->
        @(Html.Kendo().Button().Name("spBtnNewGroup").HtmlAttributes(new { type = "button" }).SpriteCssClass("icon-group").Content("New Group").Events(e => e.Click("SUPLEXUI.spBtnNewGroupClick")))
        <!-- Comment tag placed here to remove the extra space between the 2 buttons
        -->
        @(Html.Kendo().Button().Name("spBtnDelete").HtmlAttributes(new { type = "button", data_bind = "enabled: securityPrincipalSelected" }).SpriteCssClass("icon-user-del").Content("Delete Security Principal").Events(e => e.Click("SUPLEXUI.spBtnDeleteClick")))
    </div>
    <kendo-splitter name="spSpltr" orientation="SplitterOrientation.Horizontal">
        <pane size="445px" scrollable="true" collapsible="true">
            <div style="margin:5px;">
                @(Html.Kendo().Grid<SecurityPrincipalListItemVM>()
                                                            .Name("spGrd")
                                                            .AutoBind(false)
                                                            .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                                            .Columns(columns =>
                                                            {
                                                                columns.Bound(u => u.UId).Hidden();
                                                                columns.Bound(u => u.Name).Width(120).ClientTemplate("<div class='#: IsEnabled ? \"\" : \"k-state-disabled\" #'><span class='#=SUPLEXUI.getSecurityPrincipalIconClass(IsUser, IsLocal, IsEnabled) #'></span><span>#: Name #</span></div>");
                                                                columns.Bound(u => u.Description);
                                                                columns.Bound(u => u.Source).ClientGroupHeaderTemplate("#= value #: #= count #").Hidden();
                                                            })
                                                            .DataSource(ds => ds
                                                                .Ajax()
                                                                .ServerOperation(false)     //Paging, sorting, filtering, and grouping will be done client-side
                                                                .Read(read => read.Action("GetSecurityPrincipals", "Admin").Type(HttpVerbs.Get))
                                                                .Group(groups =>
                                                                {
                                                                    groups.AddDescending(u => u.Source);
                                                                })
                                                                .Aggregates(ag =>
                                                                {
                                                                    ag.Add(p => p.Source).Count();
                                                                })
                                                                .Sort(s => s.Add("Name").Ascending())
                                                                .Events(e => e.Error("SUPLEXUI.dataSourceError"))
                                                                .Model(m => m.Id(r => r.UId))
                                                            )
                        //.Events(e => e
                        //        .Change("SUPLEXUI.grdSecurityPrincipalsChange")
                        //        .DataBound("SUPLEXUI.grdSecurityPrincipalsDataBound"))
                )

            </div>
        </pane>
        <pane>
            <div id="spEditor" style="margin:5px;min-width:650px;" data-bind="visible: editor.visible">
                <div class="clearfix" style="margin-bottom:0.6em;">
                    <div style="float:right;margin-right:10px;">
                        @(Html.Kendo().Button()
                                                                                    .Name("spBtnSave")
                                                                                    .Content("Save")
                                                                                    .HtmlAttributes(new { type = "button", data_bind = "enabled: editor.hasChanges" })
                                                                                    .Events(e => e.Click("SUPLEXUI.spBtnSaveClick")))

                        @(Html.Kendo().Button()
                                                                                    .Name("spBtnDiscard")
                                                                                    .Content("Discard")
                                                                                    .HtmlAttributes(new { type = "button" })
                                                                                    .Events(e => e.Click("SUPLEXUI.spBtnDiscardClick")))


                    </div>
                    <h2 class="k-header" style="line-height:30px;font-weight:600;"><span data-bind="visible: editor.model.IsUser">User : </span><span data-bind="invisible: editor.model.IsUser">Group : </span><span data-bind="text: editor.model.Name"></span><span data-bind="visible: editor.hasChanges" style="color:red">*</span></h2>

                </div>
                <div class="accordion">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Properties
                    </h2>
                    <div class="k-content">
                        <div class="formElement">
                            <div class="formLabel">Name</div>
                            <div class="formInput">
                                <input id="name" name="name" class="k-textbox" data-bind="value: editor.model.Name, events: {  keyup: editor.raiseChange }" data-value-update="keyup" required data-required-msg="Name field is required" />
                                <span class="k-invalid-msg" data-for="name"></span>
                            </div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel">Description</div>
                            <div class="formInput">
                                <textarea class="k-textbox" data-bind="value: editor.model.Description, events: {  keyup: editor.raiseChange }" data-value-update="keyup" rows="3"></textarea>
                            </div>
                        </div>
                        <div class="formElement" data-bind="invisible: editor.model.IsUser">
                            <div class="formLabel">Mask</div>
                            <div class="formInput">
                                <label class="k-textbox" readonly data-bind="text: editor.model.Mask" />
                            </div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel">Built-In</div>
                            <div class="formInput">
                                <input type="checkbox" name="isBuiltIn" id="isBuiltIn" class="k-checkbox" data-bind="checked: editor.model.IsBuiltIn, events: {change: editor.raiseChange}" />
                                <label class="k-checkbox-label" for="isBuiltIn">Yes</label>
                            </div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel">Status</div>
                            <div class="formInput">
                                <input type="radio" name="isEnabled" id="statusIsEnabled" class="k-radio" value="true" data-type="boolean" data-bind="checked: editor.model.IsEnabled, events: {change: editor.raiseChange}" />
                                <label class="k-radio-label" for="statusIsEnabled">Enabled</label>
                                <input type="radio" name="isEnabled" id="statusIsDisabled" class="k-radio" value="false" data-type="boolean" data-bind="checked: editor.model.IsEnabled, events: {change: editor.raiseChange}" />
                                <label class="k-radio-label" for="statusIsDisabled">Disabled</label>
                            </div>
                        </div>
                        <div class="formElement" data-bind="invisible: editor.model.IsUser">
                            <div class="formLabel">Type</div>
                            <div class="formInput">
                                <input type="radio" name="isLocal" id="typeIsLocal" class="k-radio" value="true" data-type="boolean" data-bind="checked: editor.model.IsLocal, events: {change: editor.raiseChange}" />
                                <label class="k-radio-label" for="typeIsLocal">Local (Suplex)</label>
                                <input type="radio" name="isLocal" id="typeIsExternal" class="k-radio" value="false" data-type="boolean" data-bind="checked: editor.model.IsLocal, events: {change: editor.raiseChange}" />
                                <label class="k-radio-label" for="typeIsExternal">External (AD, LDAP, etc)</label>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div class="error" data-bind="visible: editor.hasError">
                    <h2>Errors</h2>
                    <div id="spEditorError"></div>
                </div>
                <div class="accordion" data-bind="visible: editor.model.IsUser">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Group Membership
                    </h2>
                    <div class="k-content groupMembership">
                        <div id="memberOfSection" style="width:335px;display:inline-block;">
                            <label for="spLbMemberOf">Member Of</label>
                            <input class="k-textbox" id="spTxtMemberOfFilter" placeholder="Filter" />
                            <select id="spLbMemberOf"></select>
                        </div>
                        <div id="notMemberOfSection" style="width:300px;display:inline-block;">
                            <label for="spLbNotMemberOf">Not Member Of</label>
                            <input class="k-textbox" id="spTxtNotMemberOfFilter" placeholder="Filter" />
                            <select id="spLbNotMemberOf"></select>
                        </div>
                    </div>
                </div>
                <div class="accordion" data-bind="visible: editor.isLocalGroup">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Group Membership
                    </h2>
                    <div class="k-content groupMembership">
                        <div id="membersSection" style="width:335px;display:inline-block;">
                            <label for="spLbMembers">Members</label>
                            <input class="k-textbox" id="spTxtMembersFilter" placeholder="Filter" />
                            <select id="spLbMembers"></select>
                        </div>
                        <div id="nonMembersSection" style="width:300px;display:inline-block;">
                            <label for="spLbNonMembers">Non Members</label>
                            <input class="k-textbox" id="spTxtNonMembersFilter" placeholder="Filter" />
                            <select id="spLbNonMembers"></select>
                        </div>
                    </div>
                </div>
                <div class="accordion" data-bind="invisible: editor.model.IsUser">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Group Hierarchy
                    </h2>
                    <div class="k-content">
                        <div id="spTlGroupHierarchy" style="width:650px"></div>
                    </div>
                </div>
            </div>
        </pane>
    </kendo-splitter>
</div>

<div id="soView" data-bind="visible: visible">
    <kendo-toolbar id="soTb">
        <toolbar-items>
            <item type="CommandType.SplitButton" id="soBtnNew" text="New Secure Object" click="SUPLEXUI.soBtnNewClick">
                <menu-buttons>
                    <toolbar-button id="soBtnNewTop" text="New Top Level Secure Object" />
                </menu-buttons>
            </item>
            <item type="CommandType.Button" id="soBtnDelete" text="Delete Secure Object" click="SUPLEXUI.soBtnDeleteClick" data-bind="enabled:secureObjectSelected" />
            <item type="CommandType.Button" id="soBtnExpandAll" icon="plus" text="Expand All" click="SUPLEXUI.soBtnExpandAllClick" />
            <item type="CommandType.Button" id="soBtnCollapseAll" icon="minus" text="Collapse All" click="SUPLEXUI.soBtnCollapseAllClick" />
        </toolbar-items>
    </kendo-toolbar>
    @*<div id="soTb" class="k-block" style="padding: 4px 0;">
        @(Html.Kendo().Button().Name("soBtnNew").HtmlAttributes(new { type = "button" }).Content("New Secure Object").Events(e => e.Click("SUPLEXUI.soBtnNewClick")))
        @(Html.Kendo().Button().Name("soBtnDelete").HtmlAttributes(new { type = "button", data_bind = "enabled: secureObjectSelected" }).Content("Delete Secure Object").Events(e => e.Click("SUPLEXUI.soBtnDeleteClick")))
        @(Html.Kendo().Button().Name("soBtnExpandAll").HtmlAttributes(new { type = "button" }).Icon("plus").Content("Expand All").Events(e => e.Click("SUPLEXUI.soBtnExpandAllClick")))
        @(Html.Kendo().Button().Name("soBtnCollapseAll").HtmlAttributes(new { type = "button" }).Icon("plus").Content("Collapse All").Events(e => e.Click("SUPLEXUI.soBtnCollapseAllClick")))
    </div>*@
    <kendo-splitter name="soSpltr" orientation="SplitterOrientation.Horizontal">
        <pane size="445px" scrollable="true" collapsible="true">
            <div class="wrapper" style="padding:5px;box-sizing:border-box;height:100%">
                @(Html.Kendo().TreeView()
                    .Name("soTv").AutoBind(false).DragAndDrop(true).DataTextField("UniqueName").LoadOnDemand(false).Events(e => e.DataBound("SUPLEXUI.soTvDataBound").Drop("SUPLEXUI.soTvDrop").Drag("SUPLEXUI.soTvDrag"))
                    .DataSource(ds => ds
                        .Custom()
                        .Sort(s => s.Add("UniqueName").Ascending())
                        .Transport(t => t
                            .Read(r => r.Action("GetSecureObjectTreeChildren", "Admin")))
                        .Schema(s => s
                            .Model(m => m.Id("UId").HasChildren("HasChildren")))
                        ))
            </div>
        </pane>
        <pane>
            <div></div><!-- do not remove this dummy div. splitter doesnt resize when there is nothing in the pane ie when the below div display is none -->
            <div id="soEditor" style="margin:5px;min-width:1000px;box-sizing:border-box;" data-bind="visible: editor.visible">
                <div class="clearfix" style="margin-bottom:0.6em;">
                    <div style="float:right;margin-right:100px;">
                        @(Html.Kendo().Button().Name("soBtnSave").Content("Save").HtmlAttributes(new { type = "button", data_bind = "enabled: editor.hasChanges" })
                              .Events(e => e.Click("SUPLEXUI.soBtnSaveClick")))

                        @(Html.Kendo().Button().Name("soBtnDiscard").Content("Discard").HtmlAttributes(new { type = "button" })
                              .Events(e => e.Click("SUPLEXUI.soBtnDiscardClick")))
                    </div>
                    <h2 class="k-header" style="line-height:30px;font-weight:600;"><span>Secure Object : </span><span data-bind="text: editor.model.UniqueName"></span><span data-bind="visible: editor.hasChanges" style="color:red">*</span></h2>
                </div>
                <div class="accordion">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Properties
                    </h2>
                    <div class="k-content">
                        <div class="formElement">
                            <div class="formLabel">Unique Name</div>
                            <div class="formInput">
                                <input id="soUniqueName" name="soUniqueName" class="k-textbox" data-bind="value: editor.model.UniqueName, events: {  keyup: editor.raiseChange }" data-value-update="keyup" required data-required-msg="Unique Name field is required" />
                                <span class="k-invalid-msg" data-for="soUniqueName"></span>
                            </div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel">Status</div>
                            <div class="formInput">
                                <input type="radio" name="isEnabled" id="soStatusIsEnabled" class="k-radio" value="true" data-type="boolean" data-bind="checked: editor.model.IsEnabled, events: {change: editor.raiseChange}" />
                                <label class="k-radio-label" for="soStatusIsEnabled">Enabled</label>
                                <input type="radio" name="isEnabled" id="soStatusIsDisabled" class="k-radio" value="false" data-type="boolean" data-bind="checked: editor.model.IsEnabled, events: {change: editor.raiseChange}" />
                                <label class="k-radio-label" for="soStatusIsDisabled">Disabled</label>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="error" data-bind="visible: editor.hasError">
                    <h2>Errors</h2>
                    <div id="soEditorError"></div>
                </div>
                <div class="accordion">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Permissions: <span data-bind="text: editor.daclItemCount"></span>
                    </h2>
                    <div class="k-content">
                        <div id="soGrdDacl" class="no-hover"></div>
                    </div>
                </div>
                <div class="accordion">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Audit: <span data-bind="text: editor.saclItemCount"></span>
                    </h2>
                    <div class="k-content">
                        <div id="soGrdSacl" class="no-hover"></div>
                    </div>

                </div>
                <div class="accordion">
                    <h2 class="k-link k-header">
                        <span class="k-icon k-i-arrow-chevron-up"></span>
                        Security Inheritance Settings: <span data-bind="text: editor.securityInheritanceState"></span>
                    </h2>
                    <div class="k-content" id="soSecurityInheritance">
                        <div class="formElement">
                            <div class="formLabel" data-bind="style:{color: editor.daclAllowInheritTextColor}">Permission Inheritance</div>
                            <div class="formInput">
                                <input id="daclAllowInherit" type="checkbox" class="k-checkbox" data-bind="checked: editor.model.DaclAllowInherit, events: {  change: editor.raiseChange }" />
                                <label class="k-checkbox-label" for="daclAllowInherit"></label>
                            </div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel" style="font-size:0.9em;padding-left:10px;">If blocked, this object will not inherit permissions from parent objects.</div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel" data-bind="style:{color: editor.saclAllowInheritTextColor}">Audit Inheritance</div>
                            <div class="formInput">
                                <input id="saclAllowInherit" type="checkbox" class="k-checkbox" data-bind="checked: editor.model.SaclAllowInherit, events: {  change: editor.raiseChange }" />
                                <label class="k-checkbox-label" for="saclAllowInherit"></label>
                            </div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel" style="font-size:0.9em;padding-left:10px;">If blocked, this object will not inherit permissions from parent objects.</div>
                        </div>
                        <div class="formElement">
                            <div class="formLabel">Specify Audit Filter</div>
                            <div class="formInput">
                                <!-- http://jsfiddle.net/shahr0oz/psEVy/ -->
                                @*<ul data-bind="source: editor.model.Security.SaclAuditTypeFilter" data-template="templateAuditTypeFilter"></ul>*@
                                <ul data-bind="source: editor.auditTypes" data-template="soTemplateAuditTypeFilter"></ul>
                                <br />
                                @*@(Html.Kendo().Button().Name("soBtnUseDefaultAuditFilter").Content("Use Default Filter").HtmlAttributes(new { type = "button", data_bind = "disabled: editor.saclAuditTypeFilterIsDefault" })
                                            .Events(e => e.Click("SUPLEXUI.soBtnUseDefaultAuditFilterClick")))*@
                                <button class="k-button" data-bind="disabled: editor.saclAuditTypeFilterIsDefault, events: { click: editor.setSaclAuditTypeFilterToDefault }">Use Default Filter</button>

                            </div>
                        </div>
                        <div class="clearfix"></div>

                    </div>

                </div>
            </div>
        </pane>
    </kendo-splitter>
</div>

<div id="dlgSelectFile"></div>
<div id="dlgSaveAs"></div>
<div id="noti"></div>
<ul id="soTvMnu">
    <li id="soTvMnuNew">New Secure Object</li>
    <li id="soTvMnuDelete" class="node-only">Delete Secure Object</li>
    <li class="k-separator" ></li>
    <li id="soTvMnuExpand">Expand All Children</li>
    <li id="soTvMnuCollapse" >Collapse All Children</li>
    <li class="k-separator node-only"></li>
    <li id="soTvMnuPreview" class="node-only">Preview</li>
</ul>
<script id="soTemplateAuditTypeFilter" type="text/x-kendo-template">
    <li>
        @*<input type="checkbox" class="k=checkbox" data-bind="checked: Checked, value: Name, events: {change: editor.raiseChange}" />*@
        @*<input type="checkbox" class="k-checkbox" data-bind="checked: selected, value:Name, attr:{id:Id}, events:{change: editor.raiseChange}" />*@
        @*<input type="checkbox" class="k-checkbox" data-bind="checked: editor.model.SaclAuditTypeFilter, value:Name, attr:{id:Id}, events:{change: editor.raiseChange}" />*@
        <input type="checkbox" class="k-checkbox" name="soAuditTypeFilter" data-type="number" data-bind="checked: editor.model.SaclAuditTypeFilter, value:Id, attr:{id:Id}, events:{change: editor.raiseChange}" />
        @*<input type="checkbox" class="k-checkbox" data-bind="value:Id, attr:{id:Id}, events:{change: editor.raiseChange, click: editor.updateSaclAuditTypeFilterToModel}" />*@
        <label class="k-checkbox-label" data-bind="text:Name, attr:{for:Id}" />
    </li>
</script>

<style>
    </style>
    @section Scripts {
        @*<script src="~/Scripts.admin.min.js"></script>*@
        <script src="~/Scripts.dist.bundle.js"></script>
    }
    @section Styles {
        <link href="~/Styles.admin.min.css" rel="stylesheet" />
    }

